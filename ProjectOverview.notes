= Social Feed Project = [12-2-2022]

-= Code Snippets =-
//* Check box (use 'ThumbUpOffAltIcon' icon instead of 'CheckIcon')
import { ThumbUpOffAltIcon } from '@mui/icons-material/ThumbUpOffAlt';

import * as React from 'react';
import { ThumbUpOffAltIcon } from '@mui/icons-material/ThumbUpOffAlt';
import ToggleButton from '@mui/material/ToggleButton';

export default function StandaloneToggleButton() {
  const [selected, setSelected] = React.useState(false);

  return (
    <ToggleButton
      value="check"
      selected={selected}
      onChange={() => {
        setSelected(!selected);
      }}
    >
      <CheckIcon />
    </ToggleButton>
  );
}


//* Previous Thumbs up and down
//* <HTML>
<button className={`btn ${activeBtn === "like" ? "like-active" : ""}`} onClick={handleLikeClick}><span className='material-symbols-rounded'>thumbs_up</span>Like{likeCount}</button>
<button className={`btn ${activeBtn === "dislike" ? "dislike-active" : ""}`} onClick={handleDislikeClick}><span className='material-symbols-rounded'>thumbs_down</span>Dislike{dislikeCount}</button>

//* JS
const [likeCount, setLikeCount] = useState(0);
const [dislikeCount, setDislikeCount] = useState(0);
const [activeBtn, setActiveBtn] = useState("none");

    const handleLikeClick = () => {
        
        if (activeBtn === "none") {
            setLikeCount (likeCount +1);
            setActiveBtn("like");
            return;
        }

        if (activeBtn === 'like'){
            setLikeCount(likeCount - 1);
            setActiveBtn("none");
            return;
          }
        
        if (activeBtn === "dislike") {
        setLikeCount(likeCount + 1);
        setDislikeCount(dislikeCount - 1);
        setActiveBtn("like");
        }
    };

    const handleDislikeClick = () => {
        
        if (activeBtn === "none") {
            setDislikeCount(dislikeCount + 1);
            setActiveBtn("dislike");
            return;
        }

        if (activeBtn === 'dislike') {
            setDislikeCount(dislikeCount - 1);
            setActiveBtn("none");
            return;
        }

        if (activeBtn === "like") {
        setDislikeCount(dislikeCount + 1);
        setLikeCount(likeCount - 1);
        setActiveBtn("dislike");
        }
    };